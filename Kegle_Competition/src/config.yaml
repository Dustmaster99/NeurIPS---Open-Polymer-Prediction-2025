# 1. PATHS
paths:
  external: "data/external"
  raw: "data/raw"                    
  interim:  "data/interim"              
  processed:  "data/processed"
  element_count_column_list: "data/external" 
  feature_plot: "data/plot"           

# 2. Data Location
data:
  train: 'train.csv'
  test:  'test.csv'
  
  target_col_TG: 'Tg'
  target_col_FFV: 'FFV'
  target_col_Density: 'Density'
  target_col_Rg: 'Rg'
  target_col_Tc: 'Tc'
  id_col: 
  smile: 'SMILES'
  element_count_column_list: 'list.pkl'
  
# 3. Model

box-cox: 
    modelo_str: "Modelo"
    modelo: "box-cox with OLS from formula"
    p_value_sig_str: "Nível de significância estatística do modelo"
    p_value_sig: 0.05
    stepwise_str: "Stepwise"
    stepwise: True 
    r2: "R - Squared"
    r2_adj: "Adjusted R - Squared"
    f_stat: "F Statistic"
    f_pvalue: "Model Significance p-value"
    rmse_str: "Root Mean Squared Error"
    mae_str: "Mean Absolute Error"
    durbin_watson_str: "Durbin-Watson Statistic"
    
    
    
# Neural_network:
#   scoring: 'neg_mean_squared_error'
#   scaler: True

#   # Hiperparâmetros com mais opções
#   hidden_layers: [8, 16, 32, 64]
#   neurons: [16, 32, 64, 128]
#   activation: ['relu', 'tanh', 'sigmoid']
#   optimizer: ['adam', 'sgd', 'rmsprop']
#   learning_rate: [0.0001, 0.001, 0.01]

#   # Treinamento
#   epochs: [100, 200, 300]
#   batch_size: [16, 32, 64]

#   # Validação cruzada e divisão dos dados
#   t_size: 0.2
#   folder_n: 4
#   target_y: 'Tg'
    
Neural_network:
  scoring: 'neg_mean_squared_error'
  scaler: True

  # Hiperparâmetros com mais opções
  hidden_layers: [ 16 ]
  neurons: [ 32 ]
  activation: ['relu']
  optimizer: ['adam']
  learning_rate: [ 0.001]

  # Treinamento
  epochs: [200]
  batch_size: [32]

  # Validação cruzada e divisão dos dados
  t_size: 0.2
  folder_n: 4
  target_y: 'Tc'    




